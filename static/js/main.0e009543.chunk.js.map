{"version":3,"sources":["LoadingSpinner/index.js","App.js","index.js"],"names":["LoadingSpinner","className","App","useState","tableData","setTableData","tableError","setError","isLoading","setLoading","id","setId","min","onChange","value","defaultValue","type","onClick","a","url","axios","get","then","response","status","console","log","data","catch","error","fetchData","href","target","rel","style","fontSize","ReactDOM","render","document","getElementById"],"mappings":"oQAGe,SAASA,IACtB,OACE,qBAAKC,UAAU,oBAAf,SACE,qBAAKA,UAAU,sBCDrB,IAiEeC,EAjEH,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACTC,EADS,KACEC,EADF,OAEeF,qBAFf,mBAETG,EAFS,KAEGC,EAFH,OAGgBJ,oBAAS,GAHzB,mBAGTK,EAHS,KAGEC,EAHF,OAIIN,mBAAS,GAJb,mBAITO,EAJS,KAILC,EAJK,KAgChB,OACE,sBAAKV,UAAU,YAAf,UACE,gCACE,0CACA,cAAC,IAAD,CAAaW,IAAK,EAAGC,SAPV,SAACC,GAChBH,EAAMG,IAMyCC,aAAc,OAE3D,uBACA,8BACE,cAAC,IAAD,CAAQC,KAAK,UAAUC,QAAS,kBAjCpCR,GAAW,QACI,uCAAG,4BAAAS,EAAA,6DACVC,EAAM,uCAAuCT,EADnC,SAQVU,IAAMC,IAAIF,GACbG,MAAK,SAAAC,GACoB,MAApBA,EAASC,SACXC,QAAQC,IAAI,WAAYH,GACxBlB,EAAakB,EAASI,KAAK,IAC3BlB,GAAW,OAGdmB,OAAM,SAAAC,GAAK,OAAItB,EAASsB,MAhBX,2CAAH,oDAkBfC,IAcI,sBAIF,uBACA,uBACA,8BACGtB,EAAY,cAACR,EAAD,IAAqBM,GAClC,gCACE,gDAAmBF,EAAU,MAC7B,gDAAmBA,EAAU,MAC7B,gDAAmBA,EAAU,MAC7B,gDAAmBA,EAAU,MAC7B,0CACA,mBAAG2B,KAAM3B,EAAU,GAAI4B,OAAO,SAASC,IAAI,aAA3C,SAAyD7B,EAAU,KACnE,uBACA,uBACA,mBAAG8B,MAAO,CAAEC,SAAU,UAAtB,SAAmC/B,EAAU,cCxDvDgC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.0e009543.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./spinner.css\";\r\n\r\nexport default function LoadingSpinner() {\r\n  return (\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n}","import React, { useState } from \"react\";\nimport { Button, InputNumber } from \"antd\";\nimport axios from \"axios\";\nimport LoadingSpinner from \"./LoadingSpinner\";\n\nconst App = () => {\n  const [tableData, setTableData] = useState([]);\n  const [tableError, setError] = useState();\n  const [isLoading, setLoading] = useState(false);\n  const [id, setId] = useState(1);\n\n  const onClickFetchData = () => {\n    setLoading(true)\n    const fetchData = async () => {\n      const url = \"http://52.207.211.180//get_by_id?id=\"+id;\n      // const customConfig = {\n      //   headers: {\n      //     'Accept': 'application/json',\n      //     'Content-Type': 'application/json'\n      //   }\n      // };\n      await axios.get(url)\n        .then(response => {\n          if (response.status === 200) {\n            console.log(\"result=>\", response)\n            setTableData(response.data[0]);\n            setLoading(false)\n          }\n        })\n        .catch(error => setError(error));\n    }\n    fetchData()\n  };\n  \n  const onChange = (value) => {\n    setId(value);\n  }\n  return (\n    <div className=\"container\">\n      <div>\n        <p>Unique ID</p>\n        <InputNumber min={1} onChange = {onChange} defaultValue={1} />\n      </div>\n      <br />\n      <div>\n        <Button type=\"primary\" onClick={() => onClickFetchData()}>\n          Search\n        </Button>\n      </div>\n      <br />\n      <br />\n      <div>\n        {isLoading ? <LoadingSpinner /> : tableError? tableError : \n        <div>\n          <p>Court Name:    {tableData[1]}</p>\n          <p>Case Title:    {tableData[2]}</p>\n          <p>Decided Date:  {tableData[3]}</p>\n          <p>Origin:        {tableData[4]}</p>\n          <p>PDF Link:</p>\n          <a href={tableData[5]} target=\"_blank\" rel=\"noreferrer\">{tableData[5]}</a>\n          <br />\n          <br />\n          <p style={{ fontSize: \"1.2rem\" }}>{tableData[7]}</p>\n        </div>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"antd/dist/antd.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}