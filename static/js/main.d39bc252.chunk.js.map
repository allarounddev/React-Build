{"version":3,"sources":["LoadingSpinner/index.js","pages/main.js","pages/Pagination/PaginationComponent.js","pages/clsearch.js","pages/data.js","pages/router.js","pages/header.js","App.js","index.js"],"names":["LoadingSpinner","className","Main","useState","modalShow","setModalShow","tableData","setTableData","rowData","setRowData","tableError","setError","isLoading","setLoading","keyword","setKeyword","SearchBar","Search","columns","dataField","text","formatter","cellContent","row","onClick","rowdata","console","log","MyVerticallyCenteredModal","props","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","CaseCourtName","Body","CaseTitle","FullText","Footer","Button","onHide","type","onChange","e","target","value","placeholder","onKeyPress","event","key","a","url","axios","get","then","response","status","data","catch","error","fetchData","show","keyField","search","searchProps","srText","pagination","paginationFactory","baseProps","PaginationComponent","componentDidMount","nextProps","setState","totalRecords","handlePageChange","page","activePage","getAllData","componentWillReceiveProps","state","limit","this","style","marginLeft","aria-label","itemClass","linkClass","prevPageText","nextPageText","firstPageText","lastPageText","itemsCountPerPage","totalItemsCount","Component","CLSearch","setData","setTotalRecords","setLimit","setIsLoading","useEffect","loadData","results","count","getPaginatedData","length","map","item","index","scope","to","absolute_url","localStorage","setItem","caseName","citation","docketNumber","Data","scrapData","setScrapData","Name","getItem","content","Routers","exact","path","element","isActive","color","background","App","location","useLocation","hash","pathname","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d39bc252.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./spinner.css\";\r\n\r\nexport default function LoadingSpinner() {\r\n  return (\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport LoadingSpinner from \"../LoadingSpinner\";\r\n//Datatable Modules\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\n\r\nconst Main = () => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n  const [rowData, setRowData] = useState([]);\r\n  const [tableError, setError] = useState();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [keyword, setKeyword] = useState();\r\n  const { SearchBar } = Search;\r\n\r\n  const openModal = (rowdata) => {\r\n    console.log(\"rowData=>\", rowdata)\r\n    setRowData(rowdata)\r\n    setModalShow(true)\r\n  }\r\n  const onClickFetchData = () => {\r\n    setLoading(true)\r\n    const fetchData = async () => {\r\n      const url = \"http://3.82.69.76/api/v1/get_by_id?id=\"+keyword;\r\n      \r\n      await axios.get(url)\r\n        .then(response => {\r\n          if (response.status === 200) {\r\n            console.log(\"result=>\", response.data)\r\n            setTableData(response.data);\r\n            console.log(tableData)\r\n            setLoading(false)\r\n          }\r\n        })\r\n        .catch(error => setError(error));\r\n    }\r\n    fetchData()\r\n    console.log(tableData)\r\n  };\r\n  \r\n  const onChange = (e) => {\r\n    setKeyword(e.target.value);\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'id',\r\n      text: 'id'\r\n    }, \r\n    {\r\n      dataField: 'CaseCourtName',\r\n      text: 'CaseCourtName',\r\n      formatter: (cellContent, row) => {\r\n        return (\r\n          <div\r\n            onClick={() => openModal(row)}\r\n          >\r\n            {cellContent}\r\n          </div>\r\n        );\r\n      },\r\n    }, \r\n    {\r\n      dataField: 'CaseTitle',\r\n      text: 'CaseTitle'\r\n    }, \r\n    {\r\n      dataField: 'DateDecided',\r\n      text: 'DateDecided'\r\n    }, \r\n    {\r\n      dataField: 'Origin',\r\n      text: 'Origin'\r\n    },\r\n    {\r\n      dataField: 'CasePDFLink',\r\n      text: 'CasePDFLink'\r\n    },\r\n  ];\r\n\r\n  function MyVerticallyCenteredModal(props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            {rowData.CaseCourtName}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>{rowData.CaseTitle}</h4>\r\n          <p>{rowData.FullText}\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <br />\r\n      <div className=\"form-outline col-md-6 col-md-offset-3\">\r\n        <input type=\"text\" id=\"search\" className=\"form-control\" onChange = {onChange} placeholder=\"Search\" onKeyPress={event => {\r\n          if (event.key === 'Enter') {\r\n            onClickFetchData()\r\n          }\r\n        }}\r\n      />\r\n      </div>\r\n      <br />\r\n      <div>\r\n        {/* <button type=\"button\" className=\"btn btn-primary\" onClick={() => onClickFetchData()}>\r\n          Search\r\n        </button> */}\r\n      </div>\r\n      <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n        {isLoading ? <LoadingSpinner /> : tableError? tableError : \r\n          <ToolkitProvider\r\n            keyField=\"id\"\r\n            data={ [tableData] }\r\n            columns={ columns }\r\n            search\r\n          >\r\n            \r\n          {\r\n            props => (\r\n              <div>\r\n                <SearchBar { ...props.searchProps } srText=\"Search this table\" />\r\n                <hr />\r\n                <BootstrapTable\r\n                  pagination={ paginationFactory() }\r\n                  { ...props.baseProps }\r\n                />\r\n              </div>\r\n            )\r\n          }\r\n          </ToolkitProvider>\r\n        }\r\n      </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Main;","import React, { Component } from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass PaginationComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      totalRecords: 0,\r\n      activePage: 1,\r\n      limit: 20\r\n    };\r\n  }\r\n  //Handle total records if comes\r\n  componentDidMount = nextProps => {\r\n    this.setState({\r\n      totalRecords: nextProps ? nextProps.totalRecords : this.props.totalRecords\r\n    });\r\n  };\r\n\r\n  //Handle Page Change\r\n  handlePageChange = page => {\r\n    this.setState({\r\n      activePage: page\r\n    });\r\n    this.props.getAllData(page);\r\n  };\r\n\r\n  componentWillReceiveProps = nextProps => {\r\n    this.componentDidMount(nextProps);\r\n  };\r\n\r\n  //Return pagination UI\r\n  render() {\r\n    let { activePage, limit, totalRecords } = this.state;\r\n    return (\r\n      <div className=\"pagination-wrapper\" style={{ marginLeft: \"30%\" }}>\r\n        <Pagination\r\n          aria-label=\"Page navigation example\"\r\n          itemClass=\"page-item\"\r\n          linkClass=\"page-link\"\r\n          prevPageText=\"Prev\"\r\n          nextPageText=\"Next\"\r\n          firstPageText=\"First\"\r\n          lastPageText=\"Last\"\r\n          activePage={activePage}\r\n          itemsCountPerPage={limit}\r\n          totalItemsCount={totalRecords}\r\n          onChange={this.handlePageChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPaginationComponent.propTypes = {\r\n  totalRecords: PropTypes.any,\r\n  limit: PropTypes.any,\r\n  activePage: PropTypes.any,\r\n  getAllData: PropTypes.any\r\n};\r\n\r\nexport default PaginationComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport PaginationComponent from \"./Pagination/PaginationComponent\";\r\nimport LoadingSpinner from \"../LoadingSpinner\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst CLSearch = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [limit, setLimit] = useState(20);\r\n    const [keyword, setKeyword] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        loadData(1, '');\r\n    }, [1]);\r\n\r\n    const loadData = (page, keyword) => {\r\n        console.log('page>>', page)\r\n        // setIsLoading(true);\r\n        const fetchData = async () => {\r\n            const url = \"https://www.courtlistener.com/api/rest/v3/search/?page=\" + page + '&q=' + keyword;\r\n\r\n            await axios.get(url)\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        const data = response.data;\r\n                        console.log('data>>>>', data);\r\n                        console.log(data.results);\r\n                        setData(data.results);\r\n                        data.count ? setTotalRecords(data.count) : setTotalRecords(0);\r\n                        setLimit(20);\r\n                        setIsLoading(false);\r\n\r\n                    }\r\n                })\r\n        }\r\n        fetchData()\r\n\r\n    }\r\n\r\n    const getPaginatedData = (page, keyword) => {\r\n        loadData(page, keyword);\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setKeyword(e.target.value);\r\n        console.log(\"keyword>>>\", keyword)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {isLoading ? <LoadingSpinner /> :\r\n                <>\r\n                    <br />\r\n                    <div className=\"form-outline col-md-6 col-md-offset-3\">\r\n                        <input type=\"text\" id=\"search\" className=\"form-control\" onChange={onChange} placeholder=\"Search\" onKeyPress={event => {\r\n                            if (event.key === 'Enter') {\r\n                                getPaginatedData(1, keyword)\r\n                            }\r\n                        }}\r\n                        />\r\n                    </div>\r\n                    <br />\r\n                    <h4>{totalRecords} Opinions</h4>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                data && data.length > 0 ?\r\n                                    data.map((item, index) => (\r\n                                        <tr key={index}>\r\n                                            <td scope=\"col\">{item.id}</td>\r\n                                            <td scope=\"col\">\r\n                                                <NavLink to={item.absolute_url} onClick={() => localStorage.setItem(\"name\", item.absolute_url)} target=\"_blank\"><h4>{item.caseName}</h4></NavLink>\r\n                                                <p><b>Citations:</b> {item.citation}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                                    <b>Docket Number:</b> {item.docketNumber}</p>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )) :\r\n                                    <h4>No Data Found!!</h4>\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    {totalRecords > 20 &&\r\n                        <PaginationComponent\r\n                            getAllData={getPaginatedData}\r\n                            totalRecords={totalRecords}\r\n                            itemsCountPerPage={limit} />\r\n                    }\r\n                </>\r\n                }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default CLSearch;","import React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport LoadingSpinner from \"../LoadingSpinner\";\r\nimport { Markup } from 'interweave';\r\nconst Data = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [scrapData,setScrapData] = useState({});\r\n\r\n    const loadSiteData = (page) => {\r\n        console.log('page>>', page)\r\n        setIsLoading(true);\r\n        const fetchData = async () => {\r\n            const url = \"http://3.82.69.76/api/v1/scrape?url=https://www.courtlistener.com\"+ page;\r\n            \r\n            await axios.get(url)\r\n                .then(response => {\r\n                if (response.status === 200) {\r\n                    const data = response.data;\r\n                    console.log('data>>>>', data);\r\n                    setScrapData(data);\r\n                    setIsLoading(false);\r\n                }\r\n                })\r\n            }\r\n            fetchData()     \r\n    }\r\n    const Name = localStorage.getItem(\"name\");\r\n   \r\n    useEffect(()=>{\r\n        loadSiteData(Name)\r\n    },[1])\r\n\r\n    return (\r\n        <>\r\n        {isLoading ? <LoadingSpinner />:\r\n            <div className=\"container\">\r\n                <Markup content={scrapData.text} />            \r\n            </div>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Data;","import { Routes, Route } from \"react-router-dom\";\r\nimport Main from '../pages/main';\r\nimport CLSearch from './clsearch';\r\nimport Data from './data';\r\n\r\nconst Routers = () => {\r\n    return (\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<Main />} />\r\n          <Route exact path=\"/search\" element={<CLSearch />} />\r\n          <Route exact path = \"/:opinion/:id/:name/\" element = {<Data />} />\r\n        </Routes>\r\n  );\r\n};\r\n\r\nexport default Routers;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  \r\n  return (\r\n    <div className=\"fixed-top header\">\r\n        <nav className=\"header-navlink\">\r\n            <NavLink to=\"/\"  style={({ isActive }) =>\r\n              isActive\r\n                ? {\r\n                    color: '#fff',\r\n                    background: '#7600dc',\r\n                  }\r\n                : { color: '#545e6f', background: '#f0f0f0' }\r\n            }>\r\n                Federal Court\r\n            </NavLink>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;\r\n            <NavLink to=\"/search\" style={({ isActive }) =>\r\n              isActive\r\n                ? {\r\n                    color: '#fff',\r\n                    background: '#7600dc',\r\n                  }\r\n                : { color: '#545e6f', background: '#f0f0f0' }\r\n            }>\r\n                Court Listener\r\n            </NavLink>\r\n        </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Routers from './pages/router';\nimport Header from './pages/header';\n\nconst App = () => {\n  const location = useLocation();\n\n  console.log('hash', location.hash);\n  console.log('pathname', location.pathname);\n  console.log('search', location.search);\n\n    return (\n      <div>\n        <Header />\n        <Routers />\n      </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport App from \"./App\";\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport \"./index.css\";\n\n\nReactDOM.render(\n<Router>\n    <App />\n</Router>, document.getElementById(\"root\"));\n"],"sourceRoot":""}